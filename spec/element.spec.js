var expect = require('chai').expect;

var {element, fromTo} = require('..');

describe('element', function () {
  it('is a function', function () {
    expect(element).to.be.a('function');
  });
  it('returns a function', function () {
    expect(element()).to.be.a('function');
  });
  it('emits the values of the passed array corresponding to the indeces generated by the passed generator', function () {
    var list = ['a', 'b', 'c', 'd'];
    var genFromOneToThree = fromTo(1, 3);
    var genLetters = element(list, genFromOneToThree);
    expect(genLetters()).to.equal('b');
    expect(genLetters()).to.equal('c');
    expect(genLetters()).to.equal(undefined);
  });
  it('returns undefined until a valid index is generated', function () {
    var list = ['a', 'b', 'c', 'd'];
    var genFromMinusTwoToTwo = fromTo(-2, 2);
    var genLetters = element(list, genFromMinusTwoToTwo);
    expect(genLetters()).to.equal(undefined);
    expect(genLetters()).to.equal(undefined);
    expect(genLetters()).to.equal('a');
    expect(genLetters()).to.equal('b');
    expect(genLetters()).to.equal(undefined);
    expect(genLetters()).to.equal(undefined);
  });
  it('if no generator is passed, the returned generator will return all the elements of the array in order', function () {
    var list = ['a', 'b', 'c'];
    var genLetters = element(list);
    expect(genLetters()).to.equal('a');
    expect(genLetters()).to.equal('b');
    expect(genLetters()).to.equal('c');
    expect(genLetters()).to.equal(undefined);
  });
});
